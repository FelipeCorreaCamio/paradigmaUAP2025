#!/bin/bash

# Demo script: Cómo crear múltiples pull requests
# Este script demuestra los comandos básicos para manejar múltiples PRs

echo "=== DEMO: Múltiples Pull Requests ==="
echo ""

echo "1. Verificar estado inicial:"
echo "git status"
echo "git branch -a"
echo ""

echo "2. Estrategia Secuencial - Crear primer PR:"
echo "git checkout main"
echo "git pull origin main"
echo "git checkout -b ejercicio1/tarea1-reservas"
echo ""
echo "# Hacer cambios en archivos..."
echo "# Editar: objetos/ejercicios/ejercicio1/clases/Biblioteca.ts"
echo ""
echo "git add ."
echo "git commit -m 'Implementar sistema de reservas para biblioteca'"
echo "git push origin ejercicio1/tarea1-reservas"
echo ""
echo "# Crear PR en GitHub web interface"
echo ""

echo "3. Crear segundo PR (después de que el primero sea aprobado):"
echo "git checkout main"
echo "git pull origin main  # Obtener cambios del PR fusionado"
echo "git checkout -b ejercicio1/tarea2-multas"
echo ""
echo "# Hacer cambios..."
echo "git add ."
echo "git commit -m 'Implementar cálculo de multas por libros vencidos'"
echo "git push origin ejercicio1/tarea2-multas"
echo ""

echo "4. Estrategia Paralela - Múltiples PRs simultáneos:"
echo "git checkout main"
echo "git checkout -b feature/sistema-reservas"
echo "# Trabajar en reservas..."
echo "git add . && git commit -m 'Sistema de reservas' && git push origin feature/sistema-reservas"
echo ""
echo "git checkout main"
echo "git checkout -b feature/tipos-socio"
echo "# Trabajar en tipos de socio..."
echo "git add . && git commit -m 'Tipos de socio' && git push origin feature/tipos-socio"
echo ""

echo "5. Comandos útiles para gestión:"
echo "git branch -a                    # Ver todas las ramas"
echo "git checkout main               # Cambiar a main"
echo "git pull origin main            # Actualizar main"
echo "git rebase main                 # Actualizar rama actual"
echo "git push --force-with-lease     # Push seguro después de rebase"
echo ""

echo "6. Limpieza después de PR fusionado:"
echo "git checkout main"
echo "git pull origin main"
echo "git branch -d rama-fusionada    # Eliminar rama local"
echo "git push origin --delete rama-fusionada  # Eliminar rama remota"
echo ""

echo "=== FIN DEL DEMO ==="
echo ""
echo "Para más detalles, consulta: docs/GIT_MULTIPLE_PULL_REQUESTS.md"